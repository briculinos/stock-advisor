import React, { useState, useEffect, useRef } from 'react';
import { useLocation } from 'react-router-dom';
import InsightsSearch from '../components/InsightsSearch';
import AnalysisBoxes from '../components/AnalysisBoxes';
import EnhancedInsightsDisplay from '../components/EnhancedInsightsDisplay';
import MoonshotScoreBreakdown from '../components/MoonshotScoreBreakdown';
import { getEnhancedInsights, getMoonshotScore } from '../services/api';

function Insights() {
  const location = useLocation();
  const initialStock = location.state as { symbol?: string; companyName?: string; autoGenerate?: boolean } | null;
  const hasAutoGenerated = useRef(false);

  const [loading, setLoading] = useState(false);
  const [insights, setInsights] = useState<any>(null);
  const [moonshotScore, setMoonshotScore] = useState<any>(null);
  const [error, setError] = useState<string | null>(null);
  const [disableAutocomplete, setDisableAutocomplete] = useState(false);

  const handleSearch = async (symbol: string, companyName: string = '') => {
    setLoading(true);
    setInsights(null);
    setMoonshotScore(null);
    setError(null);

    try {
      // Fetch both enhanced insights and moonshot score in parallel
      const [enhancedData, moonshotData] = await Promise.all([
        getEnhancedInsights(symbol, companyName),
        getMoonshotScore(symbol, companyName)
      ]);

      setInsights(enhancedData);
      setMoonshotScore(moonshotData.moonshotScore);
      // Re-enable autocomplete after insights are generated
      setDisableAutocomplete(false);
    } catch (err) {
      console.error('Error fetching insights:', err);
      setError('Failed to generate insights. Please try again.');
      // Re-enable autocomplete on error too
      setDisableAutocomplete(false);
    } finally {
      setLoading(false);
    }
  };

  // Set initial autocomplete state based on navigation source
  useEffect(() => {
    if (initialStock?.autoGenerate) {
      // Disable autocomplete when coming from Home/Moonshots
      setDisableAutocomplete(true);
    }
  }, [initialStock?.autoGenerate]);

  // Auto-generate insights when navigating from Home page
  useEffect(() => {
    if (initialStock?.autoGenerate && initialStock?.symbol && !hasAutoGenerated.current) {
      hasAutoGenerated.current = true;
      handleSearch(initialStock.symbol, initialStock.companyName || '');
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [initialStock?.symbol, initialStock?.companyName, initialStock?.autoGenerate]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <main className="max-w-7xl mx-auto px-4 py-4 md:py-8">
        <div className="grid grid-cols-1 3xl:grid-cols-3 gap-6">
          {/* Left Column - Insights Search */}
          <div className="space-y-6">
            <InsightsSearch
              onSearch={handleSearch}
              loading={loading}
              initialSymbol={initialStock?.symbol}
              initialCompanyName={initialStock?.companyName}
              disableAutocomplete={disableAutocomplete}
            />
            {/* Analysis Boxes - Only show on 3XL screens (1920px+) in left column */}
            <div className="hidden 3xl:block">
              {!loading && insights && (
                <AnalysisBoxes data={insights} />
              )}
            </div>
          </div>

          {/* Right Column - Insights Display */}
          <div className="3xl:col-span-2">
            {loading && (
              <div className="bg-white rounded-lg shadow-md p-8 md:p-12 text-center">
                <div className="animate-spin rounded-full h-12 w-12 md:h-16 md:w-16 border-b-4 border-blue-600 mx-auto mb-4"></div>
                <p className="text-gray-600 text-base md:text-lg font-semibold">Generating insights...</p>
                <p className="text-gray-500 text-sm mt-2">
                  Analyzing market trends
                </p>
              </div>
            )}

            {!loading && !insights && !error && (
              <div className="bg-white rounded-lg shadow-md p-6 md:p-12 text-center">
                <div className="text-5xl md:text-6xl mb-4">üí°</div>
                <h2 className="text-xl md:text-2xl font-bold text-gray-900 mb-2">
                  Generate Enhanced Stock Insights
                </h2>
                <p className="text-sm md:text-base text-gray-600 mb-4">
                  Enter a stock symbol to generate comprehensive multi-source analysis
                </p>
                <div className="bg-blue-50 rounded-lg p-4 text-left max-w-md mx-auto">
                  <h3 className="font-semibold text-gray-900 mb-2 text-sm md:text-base">Features:</h3>
                  <ul className="space-y-1 text-xs md:text-sm text-gray-700">
                    <li>‚Ä¢ <strong>Technical Analysis</strong> (40%): RSI, MACD, momentum</li>
                    <li>‚Ä¢ <strong>Fundamental Analysis</strong> (25%): Elliott Wave patterns</li>
                    <li>‚Ä¢ <strong>Sentiment Analysis</strong> (20%): News and market buzz</li>
                    <li>‚Ä¢ <strong>Macro Analysis</strong> (15%): VIX and market regime</li>
                    <li>‚Ä¢ BUY/HOLD/SELL recommendation with confidence %</li>
                    <li>‚Ä¢ Entry, stop loss, and target prices</li>
                  </ul>
                </div>
              </div>
            )}

            {!loading && error && (
              <div className="bg-white rounded-lg shadow-md p-8 md:p-12 text-center">
                <div className="text-5xl md:text-6xl mb-4">‚ö†Ô∏è</div>
                <h2 className="text-xl md:text-2xl font-bold text-red-600 mb-2">
                  Error
                </h2>
                <p className="text-sm md:text-base text-gray-600">
                  {error}
                </p>
              </div>
            )}

            {/* Main Recommendation - Show first on mobile/tablet/iPad */}
            {!loading && insights && (
              <EnhancedInsightsDisplay data={insights} />
            )}

            {/* Moonshot Warning - Show if stock has moonshot potential despite weak fundamentals */}
            {!loading && insights && insights.moonshotWarning && (
              <div className="mt-4 md:mt-6 bg-gradient-to-r from-amber-50 to-orange-50 border-l-4 border-amber-500 rounded-lg shadow-md p-4 md:p-6">
                <div className="flex items-start">
                  <div className="flex-shrink-0">
                    <svg className="h-6 w-6 text-amber-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                  </div>
                  <div className="ml-3 flex-1">
                    <h3 className="text-lg font-bold text-amber-900 mb-2">Speculative Moonshot Opportunity</h3>
                    <p className="text-sm md:text-base text-amber-800 whitespace-pre-line">
                      {insights.moonshotWarning}
                    </p>
                    {insights.moonshotScore !== undefined && (
                      <div className="mt-3 flex items-center text-xs md:text-sm text-amber-700">
                        <span className="font-semibold">Moonshot Score: {insights.moonshotScore}/100</span>
                        <span className="mx-2">‚Ä¢</span>
                        <span className="font-semibold">Grade: {insights.moonshotGrade}</span>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            )}

            {/* Analysis Boxes - Show after recommendation on all screens < 1920px (including iPads), hide on 3XL */}
            <div className="3xl:hidden mt-4 md:mt-6">
              {!loading && insights && (
                <AnalysisBoxes data={insights} />
              )}
            </div>

            {/* Moonshot Score Breakdown */}
            {!loading && moonshotScore && (
              <div className="mt-4 md:mt-6">
                <MoonshotScoreBreakdown moonshotScore={moonshotScore} />
              </div>
            )}
          </div>
        </div>

        {/* Recent News - Full width at bottom on ALL devices */}
        {!loading && insights && insights.news && insights.news.length > 0 && (
          <div className="bg-white rounded-lg shadow-md p-4 md:p-6 mt-6">
            <h3 className="text-lg md:text-xl font-bold mb-3 md:mb-4 text-gray-900">Recent News</h3>
            <div className="space-y-3">
              {insights.news.slice(0, 5).map((item: any, idx: number) => (
                <div key={idx} className="border-l-4 border-blue-500 pl-4 py-2">
                  <a
                    href={item.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-blue-600 hover:text-blue-800 font-semibold text-sm"
                  >
                    {item.title}
                  </a>
                  <p className="text-xs text-gray-600 mt-1">{item.snippet}</p>
                  <p className="text-xs text-gray-400 mt-1">
                    {new Date(item.publishedAt).toLocaleDateString()}
                  </p>
                </div>
              ))}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}

export default Insights;
